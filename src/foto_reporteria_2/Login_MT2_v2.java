/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package foto_reporteria_2;
import Clases_Rasq.Conexion;


import Clases_Rasq.Mthod_Login_Pro;
import Formularios.Administrador;
import Formularios.Director;
import com.digitalpersona.onetouch.DPFPDataPurpose;
import com.digitalpersona.onetouch.DPFPFeatureSet;
import com.digitalpersona.onetouch.DPFPGlobal;
import com.digitalpersona.onetouch.DPFPSample;
import com.digitalpersona.onetouch.DPFPTemplate;
import com.digitalpersona.onetouch.capture.DPFPCapture;
import com.digitalpersona.onetouch.capture.event.DPFPDataAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPDataEvent;
import com.digitalpersona.onetouch.capture.event.DPFPErrorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPErrorEvent;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusEvent;
import com.digitalpersona.onetouch.capture.event.DPFPSensorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPSensorEvent;
import com.digitalpersona.onetouch.processing.DPFPEnrollment;
import com.digitalpersona.onetouch.processing.DPFPFeatureExtraction;
import com.digitalpersona.onetouch.processing.DPFPImageQualityException;
import com.digitalpersona.onetouch.verification.DPFPVerification;
import com.digitalpersona.onetouch.verification.DPFPVerificationResult;
import java.awt.Image;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.opencv.core.Core;

/**
 *
 * @author Works
 */
public class Login_MT2_v2 extends javax.swing.JFrame {

    /**
     * Creates new form Login_MT2_v2
     */
    
 
    String password;
    int Tipo_usuario;
    String Nombre_usuario;
    String apellidos; 
    int edad;
    String cargo; 
    String respuesta;
    String Pregunta;

    Conexion conex = new Conexion();
    String Block;
    ImageIcon receptor_img;
    String estado;
    String usuario = "Usuario";
    String contraseña = "Contraseña";
    private String usuerC;
    int cod_usuario;
    private String ContraC;
    int estado_contraseña;
    String R_fecha;
    Calendar calendario = new GregorianCalendar();
    String  año  = Integer.toString(calendario.get(Calendar.YEAR));
    String  mes  = Integer.toString(calendario.get(Calendar.MONTH)+1);
    String  dia  = Integer.toString(calendario.get(Calendar.DAY_OF_MONTH));
    String  fecha = año+"-"+0+mes+"-"+dia;
    String fecha_bd;

     public String getBlock() {
        return Block;
    }

    public void setBlock(String Block) {
        this.Block = Block;
    }
    public Login_MT2_v2() {
        initComponents();
        Pnl_login.setVisible(false);
        
        
 this.setLocationRelativeTo(null);
 addWindowListener(new java.awt.event.WindowAdapter() {
public void windowClosing(java.awt.event.WindowEvent evt) {
formWindowClosing(evt);
}

public void windowOpened(java.awt.event.WindowEvent evt) {
formWindowOpened(evt);
}
});

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        clockDigital1 = new org.edisoncor.gui.varios.ClockDigital();
        Pnl_login = new javax.swing.JPanel();
        btn_olv_contra = new org.edisoncor.gui.label.LabelTask();
        btn_log_in = new javax.swing.JButton();
        txt_usuario = new org.edisoncor.gui.textField.TextFieldRound();
        lbl_erase = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_password = new org.edisoncor.gui.passwordField.PasswordFieldRound();
        lbl_mirar = new javax.swing.JLabel();
        lbl_huellero = new javax.swing.JLabel();
        panelCurves3 = new org.edisoncor.gui.panel.PanelCurves();
        Panel_huellero = new javax.swing.JPanel();
        lblImagenHuella = new javax.swing.JLabel();
        txt_datos = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 32, 48));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Drag.png"))); // NOI18N
        jLabel1.setText("Ayuda");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 17, -1, -1));

        clockDigital1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(clockDigital1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 96, -1));

        Pnl_login.setBackground(new java.awt.Color(0, 32, 48));
        Pnl_login.setForeground(new java.awt.Color(51, 51, 55));
        Pnl_login.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_olv_contra.setForeground(new java.awt.Color(255, 255, 255));
        btn_olv_contra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Help.png"))); // NOI18N
        btn_olv_contra.setText("Contraseña");
        btn_olv_contra.setDescription("Olvidada ?");
        btn_olv_contra.setRedondeado(true);
        btn_olv_contra.setVerifyInputWhenFocusTarget(false);
        btn_olv_contra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_olv_contraMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_olv_contraMousePressed(evt);
            }
        });
        Pnl_login.add(btn_olv_contra, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 170, 47));

        btn_log_in.setForeground(new java.awt.Color(51, 51, 55));
        btn_log_in.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/log2.jpg"))); // NOI18N
        btn_log_in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_log_inActionPerformed(evt);
            }
        });
        Pnl_login.add(btn_log_in, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 227, 28));

        txt_usuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_usuarioMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txt_usuarioMouseReleased(evt);
            }
        });
        Pnl_login.add(txt_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 264, 240, 27));

        lbl_erase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Delete_X.png"))); // NOI18N
        lbl_erase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_eraseMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_eraseMousePressed(evt);
            }
        });
        Pnl_login.add(lbl_erase, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 264, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/usuario.png"))); // NOI18N
        Pnl_login.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 220, -1));

        txt_password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_passwordMouseClicked(evt);
            }
        });
        Pnl_login.add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 308, 240, 30));

        lbl_mirar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Wach_R.png"))); // NOI18N
        lbl_mirar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_mirarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lbl_mirarMouseReleased(evt);
            }
        });
        Pnl_login.add(lbl_mirar, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 309, -1, -1));

        lbl_huellero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Finger Print_x.png"))); // NOI18N
        lbl_huellero.setText("Login por huella");
        lbl_huellero.setAlignmentY(0.2F);
        lbl_huellero.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_huellero.setIconTextGap(10);
        lbl_huellero.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lbl_huellero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_huelleroMouseClicked(evt);
            }
        });
        lbl_huellero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lbl_huelleroKeyPressed(evt);
            }
        });
        Pnl_login.add(lbl_huellero, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 90, 80));

        panelCurves3.setForeground(new java.awt.Color(51, 255, 51));
        Pnl_login.add(panelCurves3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 320, 30));

        jPanel1.add(Pnl_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 72, 320, 520));

        Panel_huellero.setBackground(new java.awt.Color(0, 32, 48));

        txt_datos.setForeground(new java.awt.Color(51, 51, 55));
        txt_datos.setBorder(javax.swing.BorderFactory.createTitledBorder("Consola"));
        txt_datos.setCaretColor(new java.awt.Color(51, 51, 55));
        txt_datos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_datosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_huelleroLayout = new javax.swing.GroupLayout(Panel_huellero);
        Panel_huellero.setLayout(Panel_huelleroLayout);
        Panel_huelleroLayout.setHorizontalGroup(
            Panel_huelleroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_huelleroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_huelleroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_datos, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(lblImagenHuella, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        Panel_huelleroLayout.setVerticalGroup(
            Panel_huelleroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_huelleroLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblImagenHuella, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_datos, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(Panel_huellero, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 310, 460));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_log_inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_log_inActionPerformed
      
        obtener_user();
        
    }//GEN-LAST:event_btn_log_inActionPerformed

    private void txt_usuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_usuarioMouseClicked
     
    }//GEN-LAST:event_txt_usuarioMouseClicked

    private void txt_usuarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_usuarioMouseReleased

    }//GEN-LAST:event_txt_usuarioMouseReleased

    private void lbl_eraseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_eraseMouseClicked
    
    }//GEN-LAST:event_lbl_eraseMouseClicked

    private void txt_passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_passwordMouseClicked
 
    }//GEN-LAST:event_txt_passwordMouseClicked

    private void lbl_mirarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_mirarMousePressed
        txt_password.setEchoChar((char)0);
    }//GEN-LAST:event_lbl_mirarMousePressed

    private void lbl_mirarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_mirarMouseReleased
       txt_password.setEchoChar('*');
    }//GEN-LAST:event_lbl_mirarMouseReleased

    private void lbl_eraseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_eraseMousePressed

       txt_usuario.setText("");
    }//GEN-LAST:event_lbl_eraseMousePressed

    private void txt_datosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_datosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_datosActionPerformed

    private void btn_olv_contraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_olv_contraMousePressed
        Contraseña_perdida contra = new Contraseña_perdida();
        contra.setVisible(true);
        this.hide();

    }//GEN-LAST:event_btn_olv_contraMousePressed

    private void btn_olv_contraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_olv_contraMouseClicked

    }//GEN-LAST:event_btn_olv_contraMouseClicked

    private void lbl_huelleroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_huelleroMouseClicked
      Panel_huellero.setVisible(true);
      Pnl_login.setVisible(false);
      start();
    }//GEN-LAST:event_lbl_huelleroMouseClicked

    private void lbl_huelleroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_huelleroKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_huelleroKeyPressed

    
    // eventos ----------------------------------------------
    Mthod_Login_Pro loog = new Mthod_Login_Pro(); 
       public void obtener_user()
    {
     if(txt_usuario.getText().length() ==0 && txt_password.getText().length() ==0)
       {
       JOptionPane.showMessageDialog(null, "Campos en blanco", "Error", JOptionPane.INFORMATION_MESSAGE);
       }
       else if(txt_usuario.getText().length() >= 1 && txt_password.getText().length() ==0)
       {
       JOptionPane.showMessageDialog(null, "Campo en blanco", "Error", JOptionPane.INFORMATION_MESSAGE);
       }
        else if(txt_usuario.getText().length() == 0 && txt_password.getText().length() >=1)
       {
        JOptionPane.showMessageDialog(null, "Campo en blanco", "Error", JOptionPane.INFORMATION_MESSAGE);
       }
       else
       {
          
      
      usuerC = txt_usuario.getText();
      ContraC = txt_password.getText();
      loog.setName_user(usuerC);
      if(loog.consult_login())
      {
          usuario = loog.getName_user();
          password =loog.getContraseña();
          cod_usuario = loog.getCod_empleado();
          Tipo_usuario = loog.getTipo_usuario();
          receptor_img = loog.getEm_url_bit();
          Block = loog.getNombre_sector();
          estado = loog.getEstado();
          estado_contraseña = loog.getEstado_contra();
          System.out.println("Estado" + Block);
          System.out.println("Estado" + estado);
          validacion();
         
            
      }
       else
     {
     
          JOptionPane.showMessageDialog(this, "Datos no encontrados");
     }  
       } // else si en caso los 2 campos  esta en blanco 
    
       
    }
       public void validacion()
       {
          if(estado.equals("Inactivo"))
          {
              nicon.notify.core.Notification.show("El Usuario " +  usuario ,  "Esta inactivo" ,nicon.notify.core.Notification.NICON_DARK_THEME , nicon.notify.core.Notification.ERROR_MESSAGE ,3000);
            
              txt_usuario.setText("");
              txt_password.setText("");
          }
            
          else
            {
          if(estado_contraseña == 1 && ContraC.equals(password))
          {
            loog.setContraseña(password);
            if(loog.compro_fecha())
            {
            fecha_bd = loog.getFecha_retorno();
            System.out.println("" + fecha +" " + fecha_bd);
            }
            
           if(fecha.equals(fecha_bd))
           {
           nicon.notify.core.Notification.show(" " +  usuario ,  "Tu cuenta tiene una contraseña provicional" ,nicon.notify.core.Notification.NICON_DARK_THEME , nicon.notify.core.Notification.ERROR_MESSAGE ,3000);
           estado_contraseña =0;
          
           }
           else
           {
           estado_contraseña =1;
           nicon.notify.core.Notification.show(" " +  usuario ,  "Tu cuenta ha sido desactivada" ,nicon.notify.core.Notification.NICON_DARK_THEME , nicon.notify.core.Notification.ERROR_MESSAGE ,3000);
           }
          }
          if(usuerC.equals(usuario) && ContraC.equals(password) && estado_contraseña ==0 )
          {
        
          if(Tipo_usuario == 1)
          {
             
        
                   Mensaje run = new  Mensaje(usuario, receptor_img);
                   run.setVisible(true);
                   Administrador admin = new Administrador();
                   admin.setVisible(true);
                   stop();
                     this.hide();
        
           
              
         
             
          /*Mensaje run = new  Mensaje(usuario, receptor_img);
          run.setVisible(true); 
          
          Sector al = new  Sector(Block);
          al.setVisible(true);
          this.setVisible(false);*/
         
     
        
    
          }
          else if (Tipo_usuario ==2)
          {
          
          System.out.println("" +Block);
        
          this.hide();
          
         
          }
          else if(Tipo_usuario ==3)
          {
          Mensaje run = new  Mensaje(usuario, receptor_img);
          run.setVisible(true);
          loog.setCod_empleado(this.cod_usuario);
          loog.obtener_sector();
          Block = loog.getNombre_sector();
          System.out.println("" + Block);
          Sector sector = new Sector(Block);
          sector.setVisible(true);
          this.hide();
          
        
          }
          else if (Tipo_usuario ==4)
          {
                      Director direc = new Director();
                      direc.setVisible(true);
                      this.hide();
         
          }
          else
          {
            JOptionPane.showMessageDialog(null, "Error 56F", "Error", JOptionPane.ERROR_MESSAGE);
          }
          }
           
          else
          {
          JOptionPane.showMessageDialog(null, "Usuario o Contraseña incorrectos ", "Error", JOptionPane.INFORMATION_MESSAGE);
          txt_password.setText("");
          } // termina validacion de campos 
           
            }
       }
       
     
    
       // evento iniciar texbox 
       
   public void iniciar()
    {
    txt_usuario.setText("                          " + usuario);
    txt_password.setText("                       " + contraseña);
    panelCurves3.getBackground().getRed();
           
    }
     //----------------------------------------------------------------------EL huellero ----------------------------------------------------------------------------------

   
 private void formWindowClosing(java.awt.event.WindowEvent evt) {
stop();
} 

private void formWindowOpened(java.awt.event.WindowEvent evt) {
Iniciar();
start();
}
   
   
 
   
   
   
   
 private DPFPCapture Lector = DPFPGlobal.getCaptureFactory().createCapture();

//Varible que permite establecer las capturas de la huellas, para determina sus caracteristicas
// y poder estimar la creacion de un template de la huella para luego poder guardarla
private DPFPEnrollment Reclutador = DPFPGlobal.getEnrollmentFactory().createEnrollment();
//Esta variable tambien captura una huella del lector y crea sus caracteristcas para auntetificarla
// o verificarla con alguna guardada en la BD
private DPFPVerification Verificador = DPFPGlobal.getVerificationFactory().createVerification();
//Variable que para crear el template de la huella luego de que se hallan creado las caracteriticas
// necesarias de la huella si no ha ocurrido ningun problema

private DPFPTemplate template;
public static String TEMPLATE_PROPERTY = "template";   

public void EnviarTexto(String string) {
txt_datos.setText(string + "\n");
} 
  protected void Iniciar(){
Lector.addDataListener(new DPFPDataAdapter() {
@Override public void dataAcquired(final DPFPDataEvent e) {
SwingUtilities.invokeLater(new Runnable() {
public void run() {
EnviarTexto("La Huella Digital ha sido Capturada");
ProcesarCaptura(e.getSample());
 
   try {
     identificarHuella();
      Reclutador.clear();
   } catch (IOException ex) {
       System.out.println("Erro0dsr"); ex.printStackTrace();
    }
}
});
}
});

Lector.addReaderStatusListener(new DPFPReaderStatusAdapter() {
@Override public void readerConnected(final DPFPReaderStatusEvent e) {
SwingUtilities.invokeLater(new Runnable() {
public void run() {
EnviarTexto("Sensor de Huella Digital esta Activado o Conectado");
}
});
}

@Override public void readerDisconnected(final DPFPReaderStatusEvent e) {
SwingUtilities.invokeLater(new Runnable() {
public void run() {
EnviarTexto("Sensor de Huella Digital esta Desactivado o no Conectado");
}
});
}
});

Lector.addSensorListener(new DPFPSensorAdapter() {
@Override public void fingerTouched(final DPFPSensorEvent e) {
SwingUtilities.invokeLater(new Runnable() {
public void run() {
EnviarTexto("El dedo ha sido colocado sobre el Lector de Huella");
}
});
}

@Override public void fingerGone(final DPFPSensorEvent e) {
SwingUtilities.invokeLater(new Runnable() {
public void run() {
EnviarTexto("El dedo ha sido quitado del Lector de Huella");
}
});
}
});

Lector.addErrorListener(new DPFPErrorAdapter(){
public void errorReader(final DPFPErrorEvent e){
SwingUtilities.invokeLater(new Runnable() {
public void run() {
EnviarTexto("Error: "+e.getError());
}
});
}
});
}  

    
public DPFPFeatureSet featuresinscripcion;
public DPFPFeatureSet featuresverificacion;

public DPFPFeatureSet extraerCaracteristicas(DPFPSample sample, DPFPDataPurpose purpose){
DPFPFeatureExtraction extractor = DPFPGlobal.getFeatureExtractionFactory().createFeatureExtraction();
try {
return extractor.createFeatureSet(sample, purpose);
}
catch (DPFPImageQualityException e) {
return null;
}
}



public void ProcesarCaptura(DPFPSample sample){
// Procesar la muestra de la huella y crear un conjunto de características con el propósito de inscripción.
featuresinscripcion = extraerCaracteristicas(sample, DPFPDataPurpose.DATA_PURPOSE_ENROLLMENT);

// Procesar la muestra de la huella y crear un conjunto de características con el propósito de verificacion.
featuresverificacion = extraerCaracteristicas(sample, DPFPDataPurpose.DATA_PURPOSE_VERIFICATION);

// Comprobar la calidad de la muestra de la huella y lo añade a su reclutador si es bueno
if (featuresinscripcion != null){
try{
//System.out.println("Las Caracteristicas de la Huella han sido creada");
Reclutador.addFeatures(featuresinscripcion);// Agregar las caracteristicas de la huella a la plantilla a crear

// Dibuja la huella dactilar capturada.
Image image=CrearImagenHuella(sample);
DibujarHuella(image);

//btnIdentificar.setEnabled(true);
}
catch (DPFPImageQualityException ex) {
System.err.println("Error: "   +ex.getMessage());
}

finally {
 

// Comprueba si la plantilla se ha creado.
switch(Reclutador.getTemplateStatus()){
case TEMPLATE_STATUS_READY:    // informe de éxito y detiene  la captura de huellas
setTemplate(Reclutador.getTemplate());

break;

case TEMPLATE_STATUS_FAILED: // informe de fallas y reiniciar la captura de huellas
Reclutador.clear();
stop();
setTemplate(null);
JOptionPane.showMessageDialog(Login_MT2_v2.this, "La Plantilla de la Huella no pudo ser creada, Repita el Proceso", "Inscripcion de Huellas Dactilares", JOptionPane.ERROR_MESSAGE);
start();
break;
}
}
}
}


public void DibujarHuella(Image image) {
lblImagenHuella.setIcon(new ImageIcon(
image.getScaledInstance(lblImagenHuella.getWidth(), lblImagenHuella.getHeight(), Image.SCALE_DEFAULT)));
repaint();
}

public void start(){
Lector.startCapture();
EnviarTexto("Utilizando el Lector de Huella Dactilar ");
}

public void setTemplate(DPFPTemplate template) {
DPFPTemplate old = this.template;
this.template = template;
firePropertyChange(TEMPLATE_PROPERTY, old, template);
}

public Image CrearImagenHuella(DPFPSample sample) {
return DPFPGlobal.getSampleConversionFactory().createImage(sample);
}

public void stop(){
Lector.stopCapture();
EnviarTexto("No se está usando el Lector de Huella Dactilar ");
}

 DPFPVerificationResult result;

public void identificarHuella() throws IOException{
try{
//Establece los valores para la sentencia SQL
Connection c= conex.conectar();
//Obtiene todas las huellas de la bd
PreparedStatement identificarStmt = c.prepareStatement("SELECT nombre_usuario , huella, cotraseña FROM Empleado ");
//Obtiene todas las huellas de la bd
ResultSet rsIdentificar = identificarStmt.executeQuery();

//Si se encuentra el nombre en la base de datos
//byte templateBuffer[] = null;
int i=0;
while(rsIdentificar.next()){
i++;
System.out.println("SQL:"+rsIdentificar.getString(1)+"\n");
System.out.println("Contador:"+i+"\n");
String nombre_usuario = rsIdentificar.getString(1);
String contraseña = rsIdentificar.getString(3);
   
   
byte templateBuffer[] = rsIdentificar.getBytes("huella");
//Crea una nueva plantilla a partir de la guardada en la base de datos
try {
   DPFPTemplate referenceTemplate = DPFPGlobal.getTemplateFactory().createTemplate(templateBuffer); 
   
   
   //Envia la plantilla creada al objeto contendor de Template del componente de huella digital
   setTemplate(referenceTemplate);
   
   result = Verificador.verify(featuresverificacion, getTemplate());
   
   if (result.isVerified()){
//crea la imagen de los datos guardado de las huellas guardadas en la base de datos

 usuerC = nombre_usuario;
 ContraC = contraseña;
 loog.setName_user(usuerC);
   if(loog.consult_login())
      {
          usuario = loog.getName_user();
          password =loog.getContraseña();
          cod_usuario = loog.getCod_empleado();
          Tipo_usuario = loog.getTipo_usuario();
          receptor_img = loog.getEm_url_bit();
          Block = loog.getNombre_sector();
          estado = loog.getEstado();
          estado_contraseña = loog.getEstado_contra();
          System.out.println("Estado" + Block);
          System.out.println("Estado" + estado);
          validacion();      
      }
       else
     {
     
          JOptionPane.showMessageDialog(this, "Datos no encontrados");
     } 
   
   
//JOptionPane.showMessageDialog(null, "Bienvenido "+rsIdentificar.getString("nombre_usuario"));
return;
}
    } catch (Exception e) {
     System.out.println("No se han identificado vectores ");
     stop();
    }
// Compara las caracteriticas de la huella recientemente capturda con la
// alguna plantilla guardada en la base de datos que coincide con ese tipo

//compara las plantilas (actual vs bd)
//Si encuentra correspondencia dibuja el mapa
//e indica el nombre de la persona que coincidió.

}
//Si no encuentra alguna huella que coincida lo indica con un mensaje
//JOptionPane.showMessageDialog(null, "No existe ningún registro que coincida con la huella.");
lblImagenHuella.setText("");
Panel_huellero.setVisible(false);
Pnl_login.setVisible(true);
//stop();
}
catch (SQLException e) {
System.out.println("Se produjo el siguiente error: "+e.getMessage());
e.printStackTrace();
}
finally{
//con.desconectar();
}
}

public DPFPTemplate getTemplate() {
return template;
}


       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
         System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_MT2_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_MT2_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_MT2_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_MT2_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_MT2_v2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_huellero;
    private javax.swing.JPanel Pnl_login;
    private javax.swing.JButton btn_log_in;
    private org.edisoncor.gui.label.LabelTask btn_olv_contra;
    private org.edisoncor.gui.varios.ClockDigital clockDigital1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblImagenHuella;
    private javax.swing.JLabel lbl_erase;
    private javax.swing.JLabel lbl_huellero;
    private javax.swing.JLabel lbl_mirar;
    private org.edisoncor.gui.panel.PanelCurves panelCurves3;
    private javax.swing.JTextField txt_datos;
    private org.edisoncor.gui.passwordField.PasswordFieldRound txt_password;
    private org.edisoncor.gui.textField.TextFieldRound txt_usuario;
    // End of variables declaration//GEN-END:variables
}
